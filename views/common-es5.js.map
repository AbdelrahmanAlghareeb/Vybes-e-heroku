{"version":3,"sources":["webpack:///src/app/modules/auth/services/api/auth-api.service.ts","webpack:///src/app/modules/profile/services/profile.service.ts"],"names":["AuthApiService","http","baseUrl","prefix","requestBody","post","observe","requestParams","get","userId","code","providedIn","ProfileService","baseUrlWithoutVersion","userData","put","id","orderNumber"],"mappings":"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","file":"common-es5.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ApiResponse } from 'src/app/models/api-response.model';\r\nimport { ConfirmEmailRequest, ForgetPasswordRequest, LoginRequest, RegisterationRequest, RegisterationRequestBusiness, ResetPasswordRequest } from 'src/app/modules/auth/models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthApiService {\r\n  baseUrl :string = 'http://mazenebada-001-site1.itempurl.com/api';\r\n  prefix : string = 'Account'\r\n  constructor(\r\n    private http:HttpClient\r\n  ) {}\r\n\r\n  login(requestBody:LoginRequest){\r\n    return this.http.post<any>(`${this.baseUrl}/${this.prefix}/authenticate`,requestBody,{observe:'body'})\r\n  }\r\n\r\n  forgetPassword(requestBody:ForgetPasswordRequest){\r\n    return this.http.post<ApiResponse>(`${this.baseUrl}/${this.prefix}/forgot-password`,requestBody)\r\n  }\r\n\r\n  resetPassword(requestBody:ResetPasswordRequest){\r\n    return this.http.post<ApiResponse>(`${this.baseUrl}/${this.prefix}/reset-password`,requestBody)\r\n  }\r\n\r\n  register(requestBody:RegisterationRequest){\r\n    return this.http.post<ApiResponse>(`${this.baseUrl}/${this.prefix}/register`,requestBody)\r\n  }\r\n  registerBusiness(requestBody:RegisterationRequestBusiness){\r\n    return this.http.post<ApiResponse>(`${this.baseUrl}/${this.prefix}/register-business`,requestBody)\r\n  }\r\n  confirmEmail(requestParams:ConfirmEmailRequest){\r\n    return this.http.get<ApiResponse>(`${this.baseUrl}/${this.prefix}/confirm-email?userId=${requestParams.userId}&code=${requestParams.code}`)\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ApiResponse } from 'src/app/models/api-response.model';\r\nimport { environment as env } from 'src/environments/environment';\r\nimport { Order } from '../../products/components/checkout/order-over-view.model';\r\nimport { User } from '../model/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  getUserData(userId) {\r\n    return this.http.get<ApiResponse<User>>(`${env.baseUrlWithoutVersion}Account/GetUserById?id=${userId}`);\r\n  }\r\n\r\n  updateBasicUser(userId, userData) {\r\n    return this.http.put<ApiResponse>(`${env.baseUrlWithoutVersion}Account/updateBasic-${userId}`, userData);\r\n  }\r\n  updateBusinessUser(userId, userData) {\r\n    return this.http.put<ApiResponse>(`${env.baseUrlWithoutVersion}Account/updateBusiness-${userId}`, userData);\r\n  }\r\n\r\n  getAllTrackOrder(id) {\r\n    return this.http.get<ApiResponse>(`${env.baseUrl}Order?FilterValue[userId]=${id}`);\r\n  }\r\n  getAllTrackOrderinfo(id) {\r\n    return this.http.get<ApiResponse>(`${env.baseUrl}OrderInfo?FilterValue[orderNumber]=${id}`);\r\n  }\r\n  getOrderByOrderNumber(orderNumber: number) {\r\n    return this.http.get<ApiResponse<Order>>(`${env.baseUrl}Order/byOrderNumber-${orderNumber}`)\r\n  }\r\n}\r\n"]}