{"version":3,"sources":["./src/app/modules/auth/services/api/auth-api.service.ts","./src/app/modules/profile/services/profile.service.ts"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,cAAc;IAGzB,YACU,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAHzB,YAAO,GAAW,8CAA8C,CAAC;QACjE,WAAM,GAAY,SAAS;IAGxB,CAAC;IAEJ,KAAK,CAAC,WAAwB;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,eAAe,EAAC,WAAW,EAAC,EAAC,OAAO,EAAC,MAAM,EAAC,CAAC;IACxG,CAAC;IAED,cAAc,CAAC,WAAiC;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAc,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,kBAAkB,EAAC,WAAW,CAAC;IAClG,CAAC;IAED,aAAa,CAAC,WAAgC;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAc,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,iBAAiB,EAAC,WAAW,CAAC;IACjG,CAAC;IAED,QAAQ,CAAC,WAAgC;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAc,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,WAAW,EAAC,WAAW,CAAC;IAC3F,CAAC;IACD,gBAAgB,CAAC,WAAwC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAc,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,oBAAoB,EAAC,WAAW,CAAC;IACpG,CAAC;IACD,YAAY,CAAC,aAAiC;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,yBAAyB,aAAa,CAAC,MAAM,SAAS,aAAa,CAAC,IAAI,EAAE,CAAC;IAC7I,CAAC;;4EA3BU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEuB;;;AAM3D,MAAM,cAAc;IAEzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAGzC,WAAW,CAAC,MAAM;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,GAAG,wEAAG,CAAC,qBAAqB,0BAA0B,MAAM,EAAE,CAAC,CAAC;IAC1G,CAAC;IAED,eAAe,CAAC,MAAM,EAAE,QAAQ;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,GAAG,wEAAG,CAAC,qBAAqB,uBAAuB,MAAM,EAAE,EAAE,QAAQ,CAAC,CAAC;IAC3G,CAAC;IACD,kBAAkB,CAAC,MAAM,EAAE,QAAQ;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,GAAG,wEAAG,CAAC,qBAAqB,0BAA0B,MAAM,EAAE,EAAE,QAAQ,CAAC,CAAC;IAC9G,CAAC;IAED,gBAAgB,CAAC,EAAE;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,GAAG,wEAAG,CAAC,OAAO,6BAA6B,EAAE,EAAE,CAAC,CAAC;IACrF,CAAC;IACD,oBAAoB,CAAC,EAAE;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,GAAG,wEAAG,CAAC,OAAO,sCAAsC,EAAE,EAAE,CAAC,CAAC;IAC9F,CAAC;;4EArBU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","file":"common-es2015.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ApiResponse } from 'src/app/models/api-response.model';\r\nimport { ConfirmEmailRequest, ForgetPasswordRequest, LoginRequest, RegisterationRequest, RegisterationRequestBusiness, ResetPasswordRequest } from 'src/app/modules/auth/models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthApiService {\r\n  baseUrl :string = 'http://mazenebada-001-site1.itempurl.com/api';\r\n  prefix : string = 'Account'\r\n  constructor(\r\n    private http:HttpClient\r\n  ) {}\r\n\r\n  login(requestBody:LoginRequest){\r\n    return this.http.post<any>(`${this.baseUrl}/${this.prefix}/authenticate`,requestBody,{observe:'body'})\r\n  }\r\n\r\n  forgetPassword(requestBody:ForgetPasswordRequest){\r\n    return this.http.post<ApiResponse>(`${this.baseUrl}/${this.prefix}/forgot-password`,requestBody)\r\n  }\r\n\r\n  resetPassword(requestBody:ResetPasswordRequest){\r\n    return this.http.post<ApiResponse>(`${this.baseUrl}/${this.prefix}/reset-password`,requestBody)\r\n  }\r\n\r\n  register(requestBody:RegisterationRequest){\r\n    return this.http.post<ApiResponse>(`${this.baseUrl}/${this.prefix}/register`,requestBody)\r\n  }\r\n  registerBusiness(requestBody:RegisterationRequestBusiness){\r\n    return this.http.post<ApiResponse>(`${this.baseUrl}/${this.prefix}/register-business`,requestBody)\r\n  }\r\n  confirmEmail(requestParams:ConfirmEmailRequest){\r\n    return this.http.get<ApiResponse>(`${this.baseUrl}/${this.prefix}/confirm-email?userId=${requestParams.userId}&code=${requestParams.code}`)\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ApiResponse } from 'src/app/models/api-response.model';\r\nimport { environment as env } from 'src/environments/environment';\r\nimport { User } from '../model/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  getUserData(userId) {\r\n    return this.http.get<ApiResponse<User>>(`${env.baseUrlWithoutVersion}Account/GetUserById?id=${userId}`);\r\n  }\r\n\r\n  updateBasicUser(userId, userData) {\r\n    return this.http.put<ApiResponse>(`${env.baseUrlWithoutVersion}Account/updateBasic-${userId}`, userData);\r\n  }\r\n  updateBusinessUser(userId, userData) {\r\n    return this.http.put<ApiResponse>(`${env.baseUrlWithoutVersion}Account/updateBusiness-${userId}`, userData);\r\n  }\r\n\r\n  getAllTrackOrder(id) {\r\n    return this.http.get<ApiResponse>(`${env.baseUrl}Order?FilterValue[userId]=${id}`);\r\n  }\r\n  getAllTrackOrderinfo(id) {\r\n    return this.http.get<ApiResponse>(`${env.baseUrl}OrderInfo?FilterValue[orderNumber]=${id}`);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}