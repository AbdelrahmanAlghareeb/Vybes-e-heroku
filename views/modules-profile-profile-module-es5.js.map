{"version":3,"sources":["webpack:///src/app/modules/profile/components/info-personal/info-personal.component.ts","webpack:///src/app/modules/profile/components/info-personal/info-personal.component.html","webpack:///src/app/modules/profile/components/my-orders/my-orders.component.ts","webpack:///src/app/modules/profile/components/my-orders/my-orders.component.html","webpack:///src/app/modules/profile/components/my-requests/my-requests.component.ts","webpack:///src/app/modules/profile/components/my-requests/my-requests.component.html","webpack:///src/app/modules/profile/components/profileedit/profileedit.component.ts","webpack:///src/app/modules/profile/components/profileedit/profileedit.component.html","webpack:///src/app/modules/profile/components/track-myorder/track-myorder.component.ts","webpack:///src/app/modules/profile/components/track-myorder/track-myorder.component.html","webpack:///src/app/modules/profile/profile-routing.module.ts","webpack:///src/app/modules/profile/profile.module.ts","webpack:///src/app/modules/profile/services/profile.service.ts"],"names":["InfoPersonalComponent","authSrvc","profileServ","route","personalRoles","isBasicUser","userData$","subscribe","data","userData","getDataUser","tabgroup","console","log","checkRout","paramMap","res","params","searchParam","search","_tabs","_results","isActive","selectedIndex","getUserData","id","personalInfo","roles","selector","templateUrl","styleUrls","MyOrdersComponent","_profileServ","requestData","getAllTracks","getAllTrackOrder","MyRequestsComponent","_fixServ","getMyRequests","getAllUserRequests","ProfileeditComponent","authApiService","alertSrvc","router","fb","languages","name","gender","activeBusiness","userType","userInfo","myForm","group","language","required","telefonNumber","phoneNumber","faxNumber","firstName","noWhitespaceValidator","lastName","title","includes","createNormalUserForm","createBusinessUserForm","companyName","commercialName","contactTelefonNumber","contactPhoneNumber","contactFaxNumber","contactLanguge","contactEmail","validators","email","control","value","isWhitespace","trim","length","isValid","whitespace","mydata","invalid","markAllAsTouched","error","formValue","updateBasicUser","success","navigate","updateBusinessUser","get","TrackMyorderComponent","isLinear","stepOneIsCompleted","stepTwoIsCompleted","stepThreeIsCompleted","trackData","stepComplete","trackId","snapshot","createTrackIdForm","trackIdCtrl","setValue","getgetAllTrackOrderinfo","getAllTrackOrderinfo","map","order","stepper","selected","completed","i","newStatus","next","routes","path","component","ProfileRoutingModule","forChild","imports","exports","ProfileModule","declarations","ProfileService","http","userId","baseUrlWithoutVersion","put","baseUrl","providedIn"],"mappings":"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","file":"modules-profile-profile-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from 'src/app/core/services';\r\nimport { UserData } from 'src/app/modules/auth/models';\r\nimport { ProfileService } from '../../services/profile.service';\r\n\r\n@Component({\r\n  selector: 'app-info-personal',\r\n  templateUrl: './info-personal.component.html',\r\n  styleUrls: ['./info-personal.component.scss']\r\n})\r\nexport class InfoPersonalComponent implements OnInit {\r\n  userData: UserData;\r\n  @ViewChild('tabgroup') tabgroup;\r\n  personalInfo: any;\r\n  personalRoles= []\r\n  isBasicUser = true;\r\n  constructor(\r\n    private authSrvc: AuthService,\r\n    private profileServ: ProfileService,\r\n    private route: ActivatedRoute,\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authSrvc.userData$.subscribe((data) => {\r\n      if (data) this.userData = data;\r\n    });\r\n    this.getDataUser();\r\n\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    if(this.tabgroup) {\r\n      // debugger;\r\n      console.log(this.tabgroup);\r\n      this.checkRout()\r\n    }\r\n  }\r\n\r\n\r\n  checkRout() {\r\n\r\n  debugger;\r\n    this.route.paramMap.subscribe((res: any) => {\r\n      console.log(res.params.searchParam);\r\n      let search = res.params.searchParam\r\n      switch (search) {\r\n        case 'personal':\r\n          this.tabgroup._tabs._results[0].isActive = true\r\n          this.tabgroup.selectedIndex = 0\r\n          console.log(this.tabgroup);\r\n          break;\r\n        case 'requests':\r\n          this.tabgroup._tabs._results[ this.isBasicUser ? 1 : 2].isActive = true\r\n          this.tabgroup.selectedIndex = this.isBasicUser ? 1 : 2\r\n          console.log(this.tabgroup);\r\n          break;\r\n        case 'orders':\r\n          this.tabgroup._tabs._results[this.isBasicUser ? 2 : 3].isActive = true\r\n          this.tabgroup.selectedIndex = this.isBasicUser ? 2 : 3\r\n          console.log(this.tabgroup);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    })\r\n  }\r\n\r\n  getDataUser() {\r\n    this.profileServ.getUserData(this.userData.id)\r\n    .subscribe((res) => {\r\n      console.log(res,'userdata');\r\n      this.personalInfo = res.data\r\n      this.personalRoles = res.data.roles\r\n      if(this.personalRoles[0] == 'Basic') {\r\n        // this.personalInfo.userType = 'Business User'\r\n        this.isBasicUser = true\r\n      } else {\r\n        // this.personalInfo.userType = 'Normal User'\r\n        this.isBasicUser = false\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","\r\n<section class=\"profile_personal_info _angular_tabs\">\r\n    <div class=\"container\">\r\n        <mat-tab-group #tabgroup>\r\n            <mat-tab label=\"Personal info\">\r\n                <div class=\"profile_personal_info_contant\">\r\n                    <img class=\"img_BG\" src=\"../../../../../assets/images/Personal-info.jpg\" alt=\"\">\r\n\r\n\r\n                    <div class=\"profile_details\" *ngIf=\"personalInfo\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-md-3 col-lg-3\">\r\n                                <div class=\"profile_details_img\">\r\n                                    <img src=\"../../../../../assets/images/NoPath - Copy (32)@2x.png\" alt=\"\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-md-9 col-lg-9\">\r\n                                <div class=\"profile_details_text\">\r\n                                    <div class=\"user_name\">\r\n                                        <h2>{{personalInfo.firstName}} {{personalInfo.lastName}}</h2>\r\n                                        <h6 >{{personalInfo.userType}}</h6>\r\n                                    </div>\r\n                                    <div class=\"user_info\">\r\n                                        <h4>Personal info</h4>\r\n                                        <a [routerLink]=\"['/profile/edit']\">Edit</a>\r\n\r\n                                        <div class=\"UEmail\">\r\n                                            <span>Email Address</span>\r\n                                            <h6>{{personalInfo.email}}</h6>\r\n                                        </div>\r\n                                        <div class=\"Umobile\">\r\n                                            <span>Mobile Number</span>\r\n                                            <h6>{{personalInfo.phoneNumber}}</h6>\r\n                                        </div>\r\n                                        <div class=\"UGender\">\r\n                                            <span>Gender</span>\r\n                                            <h6>{{personalInfo.title}}</h6>\r\n                                        </div>\r\n                                        <div class=\"UBirthDay\">\r\n                                            <span>Birthdate</span>\r\n                                            <h6>01-02-1900</h6>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </mat-tab>\r\n            <mat-tab label=\"Commercial info\" *ngIf=\"!isBasicUser\">\r\n              <div class=\"profile_personal_info_contant\">\r\n                <img class=\"img_BG\" src=\"../../../../../assets/images/Personal-info.jpg\" alt=\"\">\r\n\r\n\r\n                <div class=\"profile_details\" *ngIf=\"personalInfo\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 col-md-3 col-lg-3\">\r\n                            <div class=\"profile_details_img\">\r\n                                <img src=\"../../../../../assets/images/NoPath - Copy (32)@2x.png\" alt=\"\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-12 col-md-9 col-lg-9\">\r\n                            <div class=\"profile_details_text\">\r\n                                <div class=\"user_name\">\r\n                                    <h2>{{personalInfo.firstName}} {{personalInfo.lastName}}</h2>\r\n                                    <!-- <h6 >{{personalInfo.userType}}</h6> -->\r\n                                </div>\r\n                                <div class=\"user_info\">\r\n                                    <h4>Commercial info</h4>\r\n                                    <a [routerLink]=\"['/profile/edit']\">Edit</a>\r\n\r\n                                    <div class=\"UEmail\">\r\n                                        <span>Commerical Name</span>\r\n                                        <h6>{{personalInfo.commercialName}}</h6>\r\n                                    </div>\r\n                                    <div class=\"UEmail\">\r\n                                        <span>Company Name</span>\r\n                                        <h6>{{personalInfo.companyName}}</h6>\r\n                                    </div>\r\n                                    <div class=\"Umobile\">\r\n                                        <span>Company Mobile Number</span>\r\n                                        <h6>{{personalInfo.contactTelefonNumber}}</h6>\r\n                                      </div>\r\n                                      <div class=\"UGender\">\r\n                                        <span>Company Email</span>\r\n                                        <h6>{{personalInfo.contactEmail}}</h6>\r\n                                    </div>\r\n                                    <!-- <div class=\"UBirthDay\">\r\n                                        <span>Birthdate</span>\r\n                                        <h6>01-02-1900</h6>\r\n                                    </div> -->\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </mat-tab>\r\n            <mat-tab label=\"My Requests\">\r\n              <app-my-requests></app-my-requests>\r\n            </mat-tab>\r\n            <mat-tab label=\"My Orders\">\r\n              <app-my-orders></app-my-orders>\r\n            </mat-tab>\r\n        </mat-tab-group>\r\n    </div>\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/core/services/auth/auth.service';\r\nimport { UserData } from 'src/app/modules/auth/models/userData.model';\r\nimport { ProfileService } from '../../services/profile.service';\r\n\r\n@Component({\r\n  selector: 'app-my-orders',\r\n  templateUrl: './my-orders.component.html',\r\n  styleUrls: ['./my-orders.component.scss']\r\n})\r\nexport class MyOrdersComponent implements OnInit {\r\n  userData: UserData;\r\n  requestData=[];\r\n  constructor(\r\n    private authSrvc: AuthService,\r\n    private _profileServ: ProfileService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authSrvc.userData$.subscribe((data) => {\r\n      if (data) this.userData = data;\r\n    });\r\n    this.getAllTracks()\r\n  }\r\n\r\n  getAllTracks() {\r\n    this._profileServ.getAllTrackOrder(this.userData.id)\r\n    .subscribe((res) => {\r\n      console.log('resssss', res);\r\n      this.requestData = res.data\r\n      // this.trackData = res.data\r\n      // console.log('here', this.trackData);\r\n      // if(this.trackData){}\r\n      // this.trackData.map((order) => {\r\n      //   this.stepper.selected.completed = true;\r\n      //   for(let i = 1; i < order.newStatus; i++) {\r\n\r\n      //     this.stepper.next();\r\n      //   }\r\n      // })\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"pt-5 d-flex flex-wrap\">\r\n  <div class=\"mb-4 mr-4\" *ngFor=\"let request of requestData\">\r\n    <button  href=\"javascript;:\" class=\"btn-light btn text-white vybe-primary-bg \"\r\n      [routerLink]=\"['/profile/track-order', {trackId: request.orderNumber}]\">#{{request.orderNumber}}\r\n    </button>\r\n  </div>\r\n  <div *ngIf=\"!requestData?.length\">\r\n    You have no orders yet\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/core/services/auth/auth.service';\r\nimport { UserData } from 'src/app/modules/auth/models/userData.model';\r\nimport { FixRequestService } from 'src/app/modules/fix-request/services/fix-request.service';\r\n\r\n@Component({\r\n  selector: 'app-my-requests',\r\n  templateUrl: './my-requests.component.html',\r\n  styleUrls: ['./my-requests.component.scss']\r\n})\r\nexport class MyRequestsComponent implements OnInit {\r\n  userData: UserData;\r\n  requestData=[];\r\n  constructor(\r\n    private _fixServ: FixRequestService, private authSrvc: AuthService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authSrvc.userData$.subscribe((data) => {\r\n      if (data) this.userData = data;\r\n    });\r\n    this.getMyRequests()\r\n  }\r\n\r\n\r\n  getMyRequests() {\r\n    this._fixServ.getAllUserRequests(this.userData.id)\r\n    .subscribe((res) => {\r\n      console.log(res);\r\n\r\n      this.requestData = res.data\r\n    })\r\n  }\r\n}\r\n","<div class=\"pt-5 d-flex flex-wrap\">\r\n  <div class=\"mb-4 mr-4\" *ngFor=\"let request of requestData\">\r\n    <button  href=\"javascript;:\" class=\"btn-light btn text-white vybe-primary-bg \"\r\n    [routerLink]=\"['/fix-request/track-request', {requestId: request.requestNumber}]\">#{{request.requestNumber}}\r\n    </button>\r\n  </div>\r\n  <div *ngIf=\"!requestData?.length\">\r\n    You have no orders yet\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, AbstractControl, FormControl, FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AlertService, AuthService } from 'src/app/core/services';\r\nimport { RegisterationRequest } from 'src/app/modules/auth/models/register-request.model';\r\nimport { UserData } from 'src/app/modules/auth/models/userData.model';\r\nimport { UserType } from 'src/app/modules/auth/models/userType.enum';\r\nimport { AuthApiService } from 'src/app/modules/auth/services/api/auth-api.service';\r\nimport { ProfileService } from '../../services/profile.service';\r\n\r\n@Component({\r\n  selector: 'app-profileedit',\r\n  templateUrl: './profileedit.component.html',\r\n  styleUrls: ['./profileedit.component.scss', '../../../auth/components/register/auth.style.scss']\r\n})\r\nexport class ProfileeditComponent implements OnInit {\r\n  myForm;\r\n  userData: UserData;\r\n  languages = [\r\n    {id: 1, name: 'English'},\r\n    {id: 2, name: 'French'},\r\n    {id: 3, name: 'German'},\r\n  ]\r\n  gender = [\r\n    {id: 1, name: 'Mr'},\r\n    {id: 2, name: 'Mrs'},\r\n  ]\r\n  userInfo;\r\n  activeBusiness= true;\r\n  personalRoles;\r\n  userType = '';\r\n  get userNameCtrl() { return this.myForm.get('userName') }\r\n  get firstNameCtrl() { return this.myForm.get('firstName') }\r\n  get lastNameCtrl() { return this.myForm.get('lastName') }\r\n  get mobileNumberCtrl() { return this.myForm.get('mobileNumber') }\r\n  get emailCtrl() { return this.myForm.get('email') }\r\n  get passwordCtrl() { return this.myForm.get('password') }\r\n  get confirmPasswordCtrl () { return this.myForm.get('confirmPassword') }\r\n  get policyAgreementCtrl() { return this.myForm.get('policyAgreement') }\r\n  constructor(\r\n    private authApiService:AuthApiService,\r\n    private alertSrvc:AlertService,\r\n    private authSrvc: AuthService,\r\n    private router:Router,\r\n    private fb : FormBuilder,\r\n    private profileServ: ProfileService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // this.createNormalUserForm();\r\n    this.authSrvc.userData$.subscribe((data) => {\r\n      if (data) this.userData = data;\r\n    });\r\n    this.getUserData()\r\n  }\r\n\r\n\r\n  createNormalUserForm(userInfo) {\r\n    this.myForm = this.fb.group(\r\n      {\r\n        language:  new FormControl(userInfo ? userInfo.language : '', [Validators.required]),\r\n        telefonNumber:  new FormControl(userInfo ? userInfo.telefonNumber : '', [Validators.required]),\r\n        phoneNumber:  new FormControl(userInfo ? userInfo.phoneNumber : '', [Validators.required]),\r\n        faxNumber:  new FormControl(userInfo ? userInfo.faxNumber : ''),\r\n        firstName: [\r\n          userInfo ? userInfo.firstName : '',\r\n          [Validators.required,\r\n            this.noWhitespaceValidator,\r\n          ],\r\n        ],\r\n        lastName: [\r\n          userInfo ? userInfo.lastName : '',\r\n          [Validators.required,\r\n            this.noWhitespaceValidator,\r\n          ],\r\n        ],\r\n      title:  new FormControl(userInfo ? userInfo.title : '', [Validators.required]),\r\n\r\n\r\n      },\r\n      // { validator: this.passwordMatchValidator }\r\n      )\r\n  }\r\n\r\n  getUserData() {\r\n    this.profileServ.getUserData(this.userData.id)\r\n    .subscribe((res) => {\r\n      this.userInfo = res.data\r\n      console.log(res.data, 'edit');\r\n      this.personalRoles = res.data.roles\r\n      if(this.personalRoles.includes('Basic') && !this.personalRoles.includes('Business')) {\r\n        this.activeBusiness = true;\r\n        this.userType = \"Basic\";\r\n        this.createNormalUserForm(this.userInfo);\r\n      } else {\r\n        this.activeBusiness = false\r\n        this.userType = \"Business\";\r\n        this.createBusinessUserForm(this.userInfo);\r\n      }\r\n    })\r\n  }\r\n  createBusinessUserForm(userInfo) {\r\n    this.myForm = this.fb.group(\r\n      {\r\n        companyName: new FormControl(userInfo ? userInfo.companyName : '', [Validators.required]),\r\n        commercialName: new FormControl(userInfo ? userInfo.commercialName : '', [Validators.required]),\r\n        language:  new FormControl(userInfo ? userInfo.language : '', [Validators.required]),\r\n        telefonNumber:  new FormControl(userInfo ? userInfo.telefonNumber : '', [Validators.required]),\r\n        phoneNumber:  new FormControl(userInfo ? userInfo.phoneNumber : '', [Validators.required]),\r\n        faxNumber:  new FormControl(userInfo ? userInfo.faxNumber : ''),\r\n\r\n        firstName: [\r\n          userInfo ? userInfo.firstName : '',\r\n          [Validators.required,\r\n            this.noWhitespaceValidator,\r\n          ],\r\n        ],\r\n        lastName: [\r\n          userInfo ? userInfo.lastName : '',\r\n          [Validators.required,\r\n            this.noWhitespaceValidator,\r\n          ],\r\n        ],\r\n        contactTelefonNumber: new FormControl(userInfo ? userInfo.contactTelefonNumber : '', [Validators.required]),\r\n      contactPhoneNumber:  new FormControl(userInfo ? userInfo.contactPhoneNumber : '', [Validators.required]),\r\n      contactFaxNumber:  new FormControl(userInfo ? userInfo.contactFaxNumber : ''),\r\n      contactLanguge:  new FormControl(userInfo ? userInfo.contactLanguge : '', [Validators.required]),\r\n      contactEmail:  new FormControl(userInfo ? userInfo.contactEmail : '', {validators : [Validators.required, Validators.email]}),\r\n      title:  new FormControl(userInfo ? userInfo.title : '', [Validators.required]),\r\n\r\n\r\n      },\r\n      )\r\n  }\r\n\r\n\r\n  /* Function Name : noWhitespaceValidator\r\n   * Author :\r\n   * Created Date : 10-01-2019\r\n   * Modified Date : *\r\n   * Purpose : to validate whitespace of  text field\r\n   * PARAMS : control\r\n   */\r\n\r\n  public noWhitespaceValidator(control: FormControl) {\r\n    if (control.value) {\r\n      const isWhitespace = (control.value || \"\").trim().length === 0;\r\n      const isValid = !isWhitespace;\r\n      return isValid ? null : { whitespace: true };\r\n    }\r\n  }\r\n\r\n\r\n  updateData(mydata) {\r\n    if (this.myForm.invalid) {\r\n      this.myForm.markAllAsTouched()\r\n      this.alertSrvc.error('Complete all the required fields(*) first')\r\n    } else {\r\n      console.log(mydata);\r\n      let formValue = mydata.value\r\n      formValue.id = this.userData.id\r\n      if(this.userType == 'Basic') {\r\n        this.profileServ.updateBasicUser(this.userData.id,formValue)\r\n        .subscribe((res) => {\r\n          // console.log(res);\r\n          this.alertSrvc.success('Your Data updated SuccessFully')\r\n          this.router.navigate(['/profile',{searchParam: 'personal'}])\r\n        })\r\n      } else {\r\n        this.profileServ.updateBusinessUser(this.userData.id,formValue)\r\n        .subscribe((res) => {\r\n          // console.log(res);\r\n          this.alertSrvc.success('Your Data updated SuccessFully')\r\n          this.router.navigate(['/profile',{searchParam: 'personal'}])\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","<section class=\"App_Loign\">\r\n  <div class=\"container pt-5\">\r\n    <h1 *ngIf=\"userInfo\">{{userType}} User</h1>\r\n    <div class=\"input_form\" style=\"width:60%;\" *ngIf=\"userInfo\">\r\n      <form [formGroup]=\"myForm\" (ngSubmit)=\"updateData(myForm)\" >\r\n        <div class=\"row\">\r\n          <div class=\"col-12 col-md-6 col-lg-6\" *ngIf=\"!activeBusiness\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label> * Company Name</mat-label>\r\n              <input\r\n              type=\"text\"\r\n              matInput\r\n              name=\"companyName\"\r\n              formControlName=\"companyName\"\r\n\r\n              >\r\n              <mat-error *ngIf=\"myForm.controls.companyName?.invalid && myForm.controls.companyName?.errors && (myForm.controls.companyName?.dirty || myForm.controls.companyName?.touched)\">\r\n                Company Name is Required\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-12 col-md-6 col-lg-6\" *ngIf=\"!activeBusiness\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label> * Commercial Name</mat-label>\r\n              <input\r\n              type=\"text\"\r\n              matInput\r\n              name=\"commercialName\"\r\n              formControlName=\"commercialName\"\r\n\r\n              >\r\n              <mat-error *ngIf=\"myForm.controls.commercialName?.invalid &&\r\n               myForm.controls.commercialName?.errors &&\r\n                (myForm.controls.commercialName?.dirty ||\r\n                 myForm.controls.commercialName?.touched)\">\r\n                 Commercial Name is Required\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-12 col-md-6 col-lg-6\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>first Name</mat-label>\r\n              <input\r\n              type=\"text\"\r\n              matInput\r\n              name=\"firstName\"\r\n              formControlName=\"firstName\"\r\n              appNumberCharacters\r\n              constraint=\"charsOnly\"\r\n              >\r\n              <mat-error\r\n\r\n              *ngIf=\"firstNameCtrl.invalid==true && firstNameCtrl.touched == true \"  class=\"text-danger\" role=\"alert\" >\r\n                first Name is Required\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-12 col-md-6 col-lg-6\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>last Name</mat-label>\r\n              <input\r\n              formControlName=\"lastName\"\r\n              matInput\r\n              appNumberCharacters\r\n              constraint=\"charsOnly\"\r\n              type=\"text\">\r\n              <mat-error *ngIf=\"lastNameCtrl.invalid==true &&lastNameCtrl.touched == true \"class=\"text-danger\" role=\"alert\" >\r\n                last Name is Required\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-12 col-md-6 col-lg-6\">\r\n            <mat-form-field  appearance=\"outline\">\r\n              <mat-select formControlName=\"language\">\r\n                <mat-option value=\"\"> Choose Language </mat-option>\r\n                <mat-option\r\n                    *ngFor=\"let lang of languages\"\r\n                    value=\"{{ lang.name }}\"\r\n                >\r\n                {{lang.name}}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-error\r\n                *ngIf=\"\r\n                  myForm.controls.language?.invalid &&\r\n                  myForm.controls.language?.errors.required &&\r\n                  (myForm.controls.language?.dirty ||\r\n                    myForm.controls.language?.touched)\r\n                \"\r\n              >\r\n                Language Is Required\r\n              </mat-error>\r\n          </mat-form-field>\r\n          </div>\r\n          <div class=\"col-12 col-md-6 col-lg-6\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label> * Telefon Number</mat-label>\r\n              <input\r\n              type=\"text\"\r\n              matInput\r\n              name=\"telefonNumber\"\r\n              formControlName=\"telefonNumber\"\r\n              >\r\n              <mat-error\r\n                *ngIf=\"\r\n                  myForm.controls.telefonNumber?.invalid &&\r\n                  myForm.controls.telefonNumber?.errors.required &&\r\n                  (myForm.controls.telefonNumber?.dirty ||\r\n                    myForm.controls.telefonNumber?.touched)\r\n                \"\r\n              >\r\n                Telefon Number is Required\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-12 col-md-6 col-lg-6\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label> * Phone Number</mat-label>\r\n              <input\r\n              type=\"text\"\r\n              matInput\r\n              name=\"phoneNumber\"\r\n              formControlName=\"phoneNumber\"\r\n              >\r\n              <mat-error\r\n                *ngIf=\"\r\n                  myForm.controls.phoneNumber?.invalid &&\r\n                  myForm.controls.phoneNumber?.errors.required &&\r\n                  (myForm.controls.phoneNumber?.dirty ||\r\n                    myForm.controls.phoneNumber?.touched)\r\n                \"\r\n              >\r\n                Phone Number is Required\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-12 col-md-6 col-lg-6\" >\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label> Fax Number</mat-label>\r\n              <input\r\n              type=\"text\"\r\n              matInput\r\n              name=\"faxNumber\"\r\n              formControlName=\"faxNumber\"\r\n              >\r\n              <mat-error\r\n                *ngIf=\"\r\n                  myForm.controls.faxNumber?.invalid &&\r\n                  myForm.controls.faxNumber?.errors.required &&\r\n                  (myForm.controls.faxNumber?.dirty ||\r\n                    myForm.controls.faxNumber?.touched)\r\n                \"\r\n              >\r\n              Fax Number is Required\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-12 col-md-6 col-lg-6\">\r\n            <mat-form-field  appearance=\"outline\">\r\n              <mat-select formControlName=\"title\">\r\n                <mat-option value=\"\"> Choose Title </mat-option>\r\n                <mat-option\r\n                    *ngFor=\"let title of gender\"\r\n                    value=\"{{ title.name }}\"\r\n                >\r\n                {{title.name}}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-error\r\n                *ngIf=\"\r\n                  myForm.controls.title?.invalid &&\r\n                  myForm.controls.title?.errors.required &&\r\n                  (myForm.controls.title?.dirty ||\r\n                    myForm.controls.title?.touched)\r\n                \"\r\n              >\r\n                Title Is Required\r\n              </mat-error>\r\n          </mat-form-field>\r\n          </div>\r\n          <div class=\"col-12 col-md-6 col-lg-6\" *ngIf=\"!activeBusiness\">\r\n            <mat-form-field  appearance=\"outline\">\r\n              <mat-select formControlName=\"contactLanguge\">\r\n                <mat-option value=\"\"> Choose Language </mat-option>\r\n                <mat-option\r\n                    *ngFor=\"let lang of languages\"\r\n                    value=\"{{ lang.name }}\"\r\n                >\r\n                {{lang.name}}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-error\r\n                *ngIf=\"\r\n                  myForm.controls.contactLanguge?.invalid &&\r\n                  myForm.controls.contactLanguge?.errors.required &&\r\n                  (myForm.controls.contactLanguge?.dirty ||\r\n                    myForm.controls.contactLanguge?.touched)\r\n                \"\r\n              >\r\n              Contact Languge Is Required\r\n              </mat-error>\r\n          </mat-form-field>\r\n          </div>\r\n          <div class=\"col-12 col-md-6 col-lg-6\" *ngIf=\"!activeBusiness\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label> * Telefon Number</mat-label>\r\n              <input\r\n              type=\"text\"\r\n              matInput\r\n              name=\"contactTelefonNumber\"\r\n              formControlName=\"contactTelefonNumber\"\r\n              >\r\n              <mat-error\r\n                *ngIf=\"\r\n                  myForm.controls.contactTelefonNumber?.invalid &&\r\n                  myForm.controls.contactTelefonNumber?.errors.required &&\r\n                  (myForm.controls.contactTelefonNumber?.dirty ||\r\n                    myForm.controls.contactTelefonNumber?.touched)\r\n                \"\r\n              >\r\n              Contact Telefon Number is Required\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-12 col-md-6 col-lg-6\" *ngIf=\"!activeBusiness\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label> * Phone Number</mat-label>\r\n              <input\r\n              type=\"text\"\r\n              matInput\r\n              name=\"contactPhoneNumber\"\r\n              formControlName=\"contactPhoneNumber\"\r\n              >\r\n              <mat-error\r\n                *ngIf=\"\r\n                  myForm.controls.contactPhoneNumber?.invalid &&\r\n                  myForm.controls.contactPhoneNumber?.errors.required &&\r\n                  (myForm.controls.contactPhoneNumber?.dirty ||\r\n                    myForm.controls.contactPhoneNumber?.touched)\r\n                \"\r\n              >\r\n              Contact Phone Number is Required\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-12 col-md-6 col-lg-6\" *ngIf=\"!activeBusiness\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label> Fax Number</mat-label>\r\n              <input\r\n              type=\"text\"\r\n              matInput\r\n              name=\"contactFaxNumber\"\r\n              formControlName=\"contactFaxNumber\"\r\n              >\r\n              <mat-error\r\n                *ngIf=\"\r\n                  myForm.controls.contactFaxNumber?.invalid &&\r\n                  myForm.controls.contactFaxNumber?.errors.required &&\r\n                  (myForm.controls.contactFaxNumber?.dirty ||\r\n                    myForm.controls.contactFaxNumber?.touched)\r\n                \"\r\n              >\r\n              Contact Fax Number is Required\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-12 col-md-6 col-lg-6\" *ngIf=\"!activeBusiness\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label> * Email</mat-label>\r\n              <input\r\n              type=\"email\"\r\n              matInput\r\n              name=\"contactEmail\"\r\n              formControlName=\"contactEmail\"\r\n\r\n              >\r\n              <mat-error *ngIf=\"myForm.controls.contactEmail?.invalid &&\r\n               myForm.controls.contactEmail?.errors.required &&\r\n                (myForm.controls.contactEmail?.dirty ||\r\n                 myForm.controls.contactEmail?.touched)\">\r\n                 Contact Email is Required\r\n              </mat-error>\r\n              <mat-error *ngIf=\"myForm.controls.contactEmail?.invalid &&\r\n              myForm.controls.contactEmail?.errors.email &&\r\n                (myForm.controls.contactEmail?.dirty || myForm.controls.contactEmail?.touched)\">\r\n                Contact Email Is Invalid\r\n            </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n\r\n        </div>\r\n            <div class=\"pb-5\" >\r\n              <button mat-flat-button color=\"primary\">Update</button>\r\n            </div>\r\n\r\n\r\n      </form>\r\n    </div>\r\n      <div class=\"auth_img\">\r\n          <img src=\"../../../../assets/images/Login_bg.jpg\" alt=\"\">\r\n      </div>\r\n  </div>\r\n</section>\r\n\r\n","import { ViewChild } from '@angular/core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatStepper } from '@angular/material/stepper';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ProfileService } from '../../services/profile.service';\r\n\r\n@Component({\r\n  selector: 'app-track-myorder',\r\n  templateUrl: './track-myorder.component.html',\r\n  styleUrls: ['./track-myorder.component.scss']\r\n})\r\nexport class TrackMyorderComponent implements OnInit {\r\n  @ViewChild('stepper', { static: false }) private stepper: MatStepper;\r\n  isLinear = false;\r\n\r\n  stepOneIsCompleted = false;\r\n  stepTwoIsCompleted = false;\r\n  stepThreeIsCompleted = false;\r\n\r\n  trackId;\r\n  trackData = [];\r\n  stepComplete = false;\r\n  get trackIdCtrl() { return this.myForm.get('trackId') }\r\n  myForm: FormGroup\r\n  constructor(private fb: FormBuilder,\r\n    private _profileServ: ProfileService,\r\n    private route: ActivatedRoute,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.trackId = this.route.snapshot.paramMap.get('trackId');\r\n    if (this.trackId) {\r\n      this.createTrackIdForm();\r\n      this.trackIdCtrl.setValue(this.trackId)\r\n      this.getgetAllTrackOrderinfo();\r\n    } else {\r\n      this.createTrackIdForm();\r\n    }\r\n  }\r\n\r\n  createTrackIdForm() {\r\n    this.myForm = this.fb.group(\r\n      {\r\n        trackId: [\"\"],\r\n      })\r\n  }\r\n\r\n\r\n  getgetAllTrackOrderinfo() {\r\n    this._profileServ.getAllTrackOrderinfo(this.myForm.value.trackId).subscribe(res => {\r\n      this.trackData = res.data;\r\n      this.trackData.map((order) => {\r\n        this.stepper.selected.completed = true;\r\n        for (let i = 1; i < order.newStatus; i++) {\r\n          this.stepper.next();\r\n        }\r\n      })\r\n    })\r\n  }\r\n}\r\n","<section class=\"track_request mb-5 pb-5 track_request\">\r\n  <div class=\"container py-2 my-2\">\r\n    <form [formGroup]=\"myForm\" (ngSubmit)=\"getgetAllTrackOrderinfo()\">\r\n\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Request ID:</mat-label>\r\n        <input formControlName=\"trackId\" matInput appNumberCharacters constraint=\"numbersonly\" type=\"text\">\r\n        <mat-error *ngIf=\"trackIdCtrl.invalid == true &&\r\n        trackIdCtrl.touched == true &&\r\n        trackIdCtrl.errors.required\">\r\n          Order Number is required\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <button mat-flat-button color=\"primary\">Search</button>\r\n    </form>\r\n  </div>\r\n  <div class=\"container py-2 my-2\">\r\n    <h3>Order <b>#{{trackIdCtrl.value}}</b> </h3>\r\n    <mat-horizontal-stepper labelPosition=\"bottom\" #stepper *ngIf=\"trackData\">\r\n      <ng-template matStepperIcon=\"edit\">\r\n        <mat-icon>done</mat-icon>\r\n      </ng-template>\r\n      <mat-step label=\"Booked\" [completed]=\"stepOneIsCompleted\" state=\"chat\"></mat-step>\r\n\r\n      <mat-step label=\"Shipped\"></mat-step>\r\n\r\n      <mat-step label=\"Delivered\"></mat-step>\r\n      <mat-step label=\"Canceled\"></mat-step>\r\n    </mat-horizontal-stepper>\r\n  </div>\r\n\r\n  <div class=\"container  col-md-8 \">\r\n    <div class=\"py-2 my-2\">\r\n      <h5> Order Event log </h5>\r\n    </div>\r\n    <table class=\"table text-center\">\r\n      <thead class=\"bg-light\">\r\n        <th> Order Number </th>\r\n        <th> Event </th>\r\n        <th> Event Date </th>\r\n\r\n\r\n      </thead>\r\n      <tbody class=\"border border-white\" id=\"tablebody\" *ngFor=\"let order of trackData\">\r\n        <td>{{order.orderNumber}}</td>\r\n        <td *ngIf=\"order.newStatus == 1\"> Booked </td>\r\n        <td *ngIf=\"order.newStatus == 2\"> Shipped </td>\r\n        <td *ngIf=\"order.newStatus == 3\"> Delivered</td>\r\n        <td *ngIf=\"order.newStatus == 4\"> Canceled</td>\r\n        <td>{{order.timeStamp | date}} </td>\r\n      </tbody>\r\n    </table>\r\n\r\n\r\n  </div>\r\n</section>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PersonalInfoComponent } from 'src/app/components/profile/personal-info/personal-info.component';\r\nimport { InfoPersonalComponent } from './components/info-personal/info-personal.component';\r\nimport { ProfileeditComponent } from './components/profileedit/profileedit.component';\r\nimport { TrackMyorderComponent } from './components/track-myorder/track-myorder.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '',  component: InfoPersonalComponent},\r\n\r\n  {path: 'edit',  component: ProfileeditComponent},\r\n  { path: 'track-order',  component: TrackMyorderComponent },\r\n//   {path: ,  component: OnlyProductViewComponent}\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\nexports: [RouterModule]\r\n})\r\nexport class ProfileRoutingModule { }\r\n\r\n\r\n","import { NgModule, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsDependenciesModule } from 'src/app/forms-dependencies/forms-dependencies.module';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/Input';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { ProfileRoutingModule } from './profile-routing.module';\r\nimport { InfoPersonalComponent } from './components/info-personal/info-personal.component';\r\nimport { MyRequestsComponent } from './components/my-requests/my-requests.component';\r\nimport { ProfileeditComponent } from './components/profileedit/profileedit.component';\r\nimport { MyOrdersComponent } from './components/my-orders/my-orders.component';\r\nimport { TrackMyorderComponent } from './components/track-myorder/track-myorder.component';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\n@NgModule({\r\n  declarations: [\r\n    InfoPersonalComponent,\r\n    MyRequestsComponent,\r\n    ProfileeditComponent,\r\n    MyOrdersComponent,\r\n    TrackMyorderComponent,\r\n    // confirmEquelValidator,\r\n    // HeaderComponent,\r\n    // RegisterNormalUserComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ProfileRoutingModule,\r\n    FormsDependenciesModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    MatSelectModule,\r\n    SharedModule,\r\n    MatStepperModule,\r\n\r\n  ],\r\n  exports: [\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    MatSelectModule,\r\n  ],\r\n\r\n})\r\nexport class ProfileModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ApiResponse } from 'src/app/models/api-response.model';\r\nimport { environment as env } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  getUserData(userId) {\r\n    return this.http.get<ApiResponse>(`${env.baseUrlWithoutVersion}Account/GetUserById?id=${userId}`);\r\n  }\r\n\r\n  updateBasicUser(userId, userData) {\r\n    return this.http.put<ApiResponse>(`${env.baseUrlWithoutVersion}Account/updateBasic-${userId}`, userData);\r\n  }\r\n  updateBusinessUser(userId, userData) {\r\n    return this.http.put<ApiResponse>(`${env.baseUrlWithoutVersion}Account/updateBusiness-${userId}`, userData);\r\n  }\r\n\r\n  getAllTrackOrder(id) {\r\n    return this.http.get<ApiResponse>(`${env.baseUrl}Order?FilterValue[userId]=${id}`);\r\n  }\r\n  getAllTrackOrderinfo(id) {\r\n    return this.http.get<ApiResponse>(`${env.baseUrl}OrderInfo?FilterValue[orderNumber]=${id}`);\r\n  }\r\n}\r\n"]}